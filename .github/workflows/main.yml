name: Deploy Blazor App to GitHub Pages

on:
  # push:
  #  branches:
  #    - main  # Set this to your default branch
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'  # Set this to the .NET version you are using

      - name: Restore dependencies
        run: dotnet restore

      - name: Build and Publish
        run: dotnet publish -c Release -o ./build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/wwwroot  # Adjust the path according to your publish directory
      
      - name: Increment version in .csproj
        # if:  ${{ github.event_name == 'pull_request'}}
        if: (github.event.pull_request.merged == true)
        run: |
          path='/home/runner/work/WealthBuilder/WealthBuilder/WealthBuilder.csproj'  # Path to the .csproj file
          content=$(cat "$path")  # Read the file contents into a variable
          version=$(echo "$content" | sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p')  # Extract current version using sed
          major=$(echo $version | cut -d '.' -f 1)  # Extract major number
          minor=$(echo $version | cut -d '.' -f 2)  # Extract minor number
          patch=$(echo $version | cut -d '.' -f 3)  # Extract patch number
          patch=$(expr $patch + 1)  # Increment patch number using expr
          new_version="$major.$minor.$patch"  # Construct new version          
          content=$(echo "$content" | sed "s/<Version>$version<\/Version>/<Version>$new_version<\/Version>/")  # Replace old version with new
          echo "$content" > "$path"  # Write new content back to the .csproj file
          echo "New version: $new_version"
          echo "Content: $content"          
          echo "github.event_name: ${{ github.event_name }}" 
          echo "Pull Request Merged: ${{ github.event.pull_request.merged }}"
          echo "Pull Request Closed without merging: ${{ !github.event.pull_request.merged }}"

      - name: Commit and Push Version Update
        # if:  ${{ github.event_name == 'pull_request'}}
        if: (github.event.pull_request.merged == true)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add /home/runner/work/WealthBuilder/WealthBuilder/WealthBuilder.csproj
          git commit -m "Increment patch version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
